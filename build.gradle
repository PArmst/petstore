plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.openapi.generator" version "7.1.0"
}

apply plugin: 'org.openapi.generator'

group = 'com.cgi.example.petstore'
version = '0.0.1-SNAPSHOT'

def versions = [
		springDocVersion    : "2.2.0",
		springDocUiVersion  : "1.7.0",
]

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		// Manage all the version numbers of Spring Boot and related libraries for us
		mavenBom 'org.springframework.boot:spring-boot-dependencies:3.1.5'
		mavenBom 'org.junit.jupiter:junit-jupiter:5.10.0'
	}
}

dependencies {
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// Spring Boot dependencies
	implementation "org.springframework.boot:spring-boot-starter-web"
	//implementation "org.springframework.boot:spring-boot-starter-actuator"

	// OpenAPI/Swagger docs
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springDocVersion"
	implementation "org.springdoc:springdoc-openapi-ui:$versions.springDocUiVersion"
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'jakarta.validation:jakarta.validation-api'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	// Unit and integration test dependencies
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('generateOpenAPI') {
	description = "Generate OpenAPI files"
	dependsOn generateOpenAPIForPetStore
}

def openApiConfigOptions = [
		skipDefaultInterface          : "true",
		skipModelGeneration           : "true",
		requestMappingMode            : 'api_interface',
		interfaceOnly                 : 'true',
		useJakartaEe                  : 'true',
		containerDefaultToNull        : 'true'
]

tasks.register('generateOpenAPIForPetStore', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName.set('spring')
	apiPackage = 'com.cgi.example.petstore.api'
	modelPackage = 'com.cgi.example.petstore.model'
	inputSpec.set("$rootDir/src/main/resources/openapi/pet-store-api.yaml")
	outputDir = "${layout.buildDirectory.get()}/generated/sources/openapi/petstore"
	configOptions.set(openApiConfigOptions)
	validateSpec = true
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java',
					   'build/generated/sources/openapi/petstore/src/main/java']
		}
	}
}

compileJava.dependsOn generateOpenAPI