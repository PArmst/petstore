openapi: 3.0.3
info:
  title: Pet Store API
  version: "1.0"
  description:
    This is an example Pet Store API to illustrate various microservice concepts.
    The API allows consumers to search for pet(s), update pets and purchase pets.
  contact:
    email: alex.stone@cgi.com
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers: [
  {
    "url": "http://localhost:8080/api/v1",
    "description": "Local development"
  },
  {
    "url": "https://staging.cloud.com/api/v1",
    "description": "Staging server"
  },
  {
    "url": "https://production.cloud.com/api/v1",
    "description": "Production server"
  }
]

paths:
  /pet-store/pets/{petId}:
    get:
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 2000
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  /pet-store/pets/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Returns a list of pets by status
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status of pets to return
          required: true
          schema:
            type: string
            default: available
            enum:
              - "Available for Purchase"
              - "Pending Collection"
              - "Sold"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
components:
  schemas:
    Pet:
      required:
        - name
        - photoUrls
        - petType
        - petStatus
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Doggie
        photoUrls:
          type: array
          items:
            type: string
            example: https://www.freepik.com/free-photo/isolated-happy-smiling-dog-white-background-portrait-4_39994000.htm#uuid=4f38a524-aa89-430d-8041-1de9ffb631c6
        petType:
          type: string
          enum: ["Dog", "Cat", "Guinea Pig", "Fish"]
          example: Dog
        petStatus:
          type: string
          enum: ["Available for Purchase", "Pending Collection", "Sold"]
          example: Available for Purchase